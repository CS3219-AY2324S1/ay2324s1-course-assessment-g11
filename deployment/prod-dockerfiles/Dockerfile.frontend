# Use the base image you created above
FROM peerprep-base:latest

# Copy utils
COPY utils /app/utils/

# Set working directory for frontend
WORKDIR /app/frontend

# Copy the entire frontend directory and prisma
COPY frontend /app/frontend
COPY prisma ./prisma/
COPY utils /app/utils/

# Install all dependencies using Yarn Workspaces
RUN yarn install --frozen-lockfile --cwd /app

# Generate the prisma client
RUN yarn prisma generate

# Compile service from TypeScript to JavaScript
# Note that NEXT_PUBLIC env variables are set at build time
ARG NEXT_PUBLIC_FRONTEND_FIREBASE_CONFIG_ARG
ENV NEXT_PUBLIC_FRONTEND_FIREBASE_CONFIG=$NEXT_PUBLIC_FRONTEND_FIREBASE_CONFIG_ARG

<<<<<<< HEAD:deployment/prod-dockerfiles/Dockerfile.frontend
ARG NEXT_PUBLIC_HTTP_PROXY_GATEWAY_ADDRESS_ARG
ENV NEXT_PUBLIC_HTTP_PROXY_GATEWAY_ADDRESS=$NEXT_PUBLIC_HTTP_PROXY_GATEWAY_ADDRESS_ARG

ARG NEXT_PUBLIC_WS_MATCH_PROXY_GATEWAY_ADDRESS_ARG
ENV NEXT_PUBLIC_WS_MATCH_PROXY_GATEWAY_ADDRESS=$NEXT_PUBLIC_WS_MATCH_PROXY_GATEWAY_ADDRESS_ARG

ARG NEXT_PUBLIC_WS_COLLABORATION_PROXY_GATEWAY_ADDRESS_ARG
ENV NEXT_PUBLIC_WS_COLLABORATION_PROXY_GATEWAY_ADDRESS=$NEXT_PUBLIC_WS_COLLABORATION_PROXY_GATEWAY_ADDRESS_ARG
=======
ENV NEXT_PUBLIC_HTTP_PROXY_GATEWAY_ADDRESS="http://api.codeparty.org:4000/"
ENV NEXT_PUBLIC_WS_MATCH_PROXY_GATEWAY_ADDRESS="http://api.codeparty.org:4002"
ENV NEXT_PUBLIC_WS_COLLABORATION_PROXY_GATEWAY_ADDRESS="http://api.codeparty.org:4003"
>>>>>>> master:deployment/prod-dockerfiles/Dockerfile.frontend-prod

RUN yarn build

# Re-install production-only dependencies
RUN yarn install --frozen-lockfile --production --cwd /app

# Start command for the frontend
CMD [ "yarn", "workspace", "frontend", "start" ]


